/* 
CSS = Cascading stylesheet

Class elector = .
ID selector = #

To access flexbox, use the display: flex;
declaration in your CSS rule
Flexbox is used on the parents and not the child

    Flex properties:

        Flex-direction: determines the direction the items are laid out
            values:
                Row: default calue, lays elemtn out left to right
                Row-reverse: lays out elemtns right to left
                Column: lays out elemtnts top to bottom
                column-reverse: lays out elements bottom to top

        Justify-content: defined alighnemnt of elements horizontally
            values:
                Flex-start: default value, items are packed to the left of the container
                Flex-end: items are packed to the right of the container
                Center: items are centered horoizontally
                Space-Between: items are evenly distributed in the line

        Align-items: defines alignment of elements vertically
            values:
                Stretch: default value, stretches elements to  fill the container height
                Flex-start: Items are placed at the top of the container
                Flex-end: items are placed at the end of the container
                Center: items are centered vertically

        For more help: flexbox froggy
            https://flexboxfroggy.com/
            https://css-tricks.com/snippets/css/a-guide-to-flexbox/

Grid is another css module I need to learn about
    RESOURCE:
        Grid Garder - https://cssgridgarden.com/
        https://css-tricks.com/snippets/css/complete-guide-grid/

*/


/* Flexbox practice
span{
   border: 1px solid purple;
   background-color: lavender;
   margin: 10px;
   padding: 20px;
}

.flex-container {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}
*/

body {
    font-family: "Segoe UI", Tahoma, sans-serif;
    background-color: mediumpurple;
}

main {
    margin: auto;
    width: 60%;
    text-align: center;
}

section {
    margin-bottom: 30px;
}

h1 {
    font-size: 2em; /*used to make fonts look the same regardless of screen size. Means make this font the zise of 2 m's */
    margin-bottom: 0px;
}

input {
    display: block;
    margin: 10px auto;
    width: 200px;
    height: 20px;
    border-radius: 4px;
    border: 1px;
    font-family: "Segoe UI", Tahoma, sans-serif;
    padding: 10px; 
}

button {
    padding: 10px 20px;
    border-radius: 5px;
    border: none;
    background-color: slateblue;
    color: white;
    font-family: "Segoe UI", Tahoma, sans-serif;
    font-size: 1em; 
    margin: 10px;
}

button:hover {
    color: slateblue;
    background-color: white;
}

.red {
    color: orangered;
}

.green {
    color: greenyellow;
}